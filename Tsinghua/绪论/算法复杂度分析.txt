常数时间复杂度:运行时间可表示和度量为T(n) = O(1)的这一类算法， 统称作“常数时间复杂度算法”

对数时间复杂度:凡运行时间可以表示和度量为T(n) = O(logcn)形式的这一类算法（其中常数c >0） ， 均统称作“对数多项式时间复杂度的算法” （polylogarithmic-time algorithm） 。

线性时间复杂度:凡运行时间可以表示和度量为T(n) = O(n)形式的这一类算法， 均统称作“线性时间复杂度算法” （linear-time algorithm） 就大多数问题而言，在对输入的每一单元均至少访问一次之前，不可能得出解答

多项式时间复杂度:若运行时间可以表示和度量为T(n) = O(f(n))的形式，而且f(x)为多项式，则对应的算法称作“多项式时间复杂度算法” （polynomial-time algorithm） 。在算法复杂度理论中，多项式时间复杂度被视作一个具有特殊意义的复杂度级别。 多项式级
的运行时间成本，在实际应用中一般被认为是可接受的或可忍受的。 某问题若存在一个复杂度在此范围以内的算法，则称该问题是可有效求解的或易解的（tractable）

指数时间复杂度:一般地， 凡运行时间可以表示和度量为T(n) = O(an)形式的算法（a > 1），均属于“指数时间复杂度算法” （exponential-time algorithm）

